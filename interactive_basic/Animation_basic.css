.box_container {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-auto-rows: 1fr;
  justify-items: center;
  align-items: center;
  gap: 200px 5px;
}
.box {
  /* [Default] */
  width: 100px;
  height: 100px;
  background: rgba(255, 255, 0, 0.7);
  border: 2px solid black;

  /* [transition] */
  /* transition: 1s; */
  /* 
    transition: 1s;
    - transition-property: all; 
    - transition-duration: 1s;
    - transition-timing-function: ease; (가속도를 설정할 수 있다.)
      개발자도구에서 가속도 설정의 코드를 정할 수 있다.
    - transition-delay: 0s; 
      0초 후에 transition이 동작한다.
    */

  /* transition: 1s linear; */
  /* 
    transition: 1s linear;
    - transition-property: all; 
    - transition-duration: 1s;
    - transition-timing-function: linear; 등속도 운동 
    - transition-delay: 0s; 
    */
  /* transition: 1s ease-in-out 1s; */
  transition: 0.5s ease-in-out;
}
.box:hover {
  /* [transform] */
  /* 현재 크기에서 요소의 크기를 2배 확대한다. */
  /* transform: scale(2); */

  /* 현재 크기에서 요소의 크기를 2배 확대한다. and 현재 상태에서 요소를 30도 회전한다. */
  /* transform: scale(2) rotate(30deg); */

  /* 현재 상태에서 요소를 x축 방향으로 30도 비튼다. */
  /* transform: skew(30deg); */

  /* 현재 상태에서 요소를 y축 방향으로 30도 비튼다. */
  /* transform: skewY(30deg); */

  /* 현재 위치에서 요소를 x축으로 30px, y축으로 -20px 이동한다. */
  /* transform: translate(30px, -20px); */

  /* 기준점 바꾸기 */
  /* 크기가 커지는 기준점이 가운데이다. */
  transform: scale(2);
  /* 기준점을 요소의 왼쪽 상단으로 바꾼다. */
  /* transform-origin: left top; */
  /* 기준점을 숫자 값으로 변경한다. 가로 방향과 세로 방향을 지정해준다.  */
  /* transform-origin: 50% 50%; --> 디폴트 기준 즉, 원래 원점이다. */
  /* 아래의 식은 기준점을 원래 요소의 가장 왼쪽, 가장 위쪽으로 잡은 left top과 같다. */
  /* transform-origin: 0 0; */
}
/* [animation] */
@keyframes ani {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(300px, 0);
  }
  100% {
    transform: translate(100px, 100px);
  }
}
.box_animation {
  /* Default */
  grid-column: 3/4;
  width: 120px;
  height: 120px;
  background: skyblue;
  border: 1px solid blue;
  text-align: center;
  color: white;

  /* [animation] */
  /* animation: ani 2s; */
  /* 
    animation-name: ani;
    animation-duration: 2s;
    animation-timing-function: ease;
    animation-delay: 0s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: none;
    animation-play-state: running;
  */
  /* animation: ani 2s linear infinite; */
  /* ani을 ease-in-out으로 1초동안 3번 실행 */
  /* animation: ani 1s ease-in-out 3; */

  /* alternate : 애니매이션의 방향을 반대로 */
  /* animation: ani 1s ease-in-out infinite alternate; */

  /* alternate-reverse : alternate인데 출발을 100%부터 */
  /* animation: ani 1s ease-in-out infinite alternate-reverse; */

  /* forwards : 마지막을 100%로 그대로 두도록 */
  animation: ani 1s ease-in-out forwards;
}
